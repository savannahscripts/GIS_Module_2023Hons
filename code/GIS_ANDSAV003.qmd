---
title: "The Distribution of Five Threatened Resident Reef Species: In Relation to Established Marine Protected Areas"
format: html
editor: visual
type: website
output-dir: docs
---

## Introduction

Resident, reef fish species are defined as those that remain in a circumscribed area and hold a home range. These fish are more vulnerable to change within their immediate habitat when compared to fish with migratory, nomadic, commuting or other movement strategies. In the context of anthropogenic climate change and habitat degradation, pollution and over-fishing, getting a clear idea of the distribution of threatened species can help in developing areas dedicated to conservation of these species' needs.

Marine Protected Areas are defined by the IUCN as "A clearly defined geographical space, recognized, dedicated, and managed, through legal or other effective means, to achieve the long-term conservation of nature with associated ecosystem services and cultural values". For more information on MPAs, click [*here*](https://www.marineprotectedareas.org.za/protecting-the-ocean).

## Objective of this Analysis

The objective of this project is to use Geographical Information Systems (GIS) to spatially visualize the occurrence data for five threatened marine reef fish species, and relate these data to the distribution of Marine Protected Areas in South Africa, specifically, in the Western Cape.

Once the occurrence and MPA data are plotted, the points of occurrence which fall outside of the protected areas can motivate investigations into MPA additions/expansions. To achieve this we need to create a visual representation of these data using Rstudio.

## Here is the outline for the process:

1.  Import occurrence data for the five threatened species

2.  Filter, transform and bind the occurrence data

3.  Import marine protected area data

4.  Crop fish data to fit MPA data

5.  Plot both MPA and fish occurrence data into an interactive leaflet map

6.  Identify species data points that fall outside of MPAs

## Getting ready:

Before we begin data manipulation or analyses, the following packages need to be installed or loaded into Rstudio:

```{r setup, `echo: FALSE`}
library(rosm)
library(ggspatial)
library(leaflet)
library(htmltools)
library(rinat)
library(sf)
library(magrittr)
library(tidyverse)
library(ctv)
library(here)
library(dplyr)
library(viridis)
library(ggplot2)
library(rnaturalearth)
library(ggrepel)
library(cowplot)
```

## 1. Importing fish data

I imported occurrence data from *iNaturalist* for the following species:

-   Cape Stumpnose [\*Rhabdosargus holubi\*](https://www.inaturalist.org/taxa/127532-Rhabdosargus-holubi)

-   Red Stumpnose [\*Chrysoblephus gibbiceps\*](https://www.inaturalist.org/taxa/445776-Chrysoblephus-gibbiceps)

-   Red Steenbras [\*Petrus rupestris\*](https://www.inaturalist.org/taxa/366831-Petrus-rupestris)

-   Bronze bream [\*Pachymetopon grande\*](https://www.inaturalist.org/taxa/446326-Pachymetopon-grande)

-   Cape Knifejaw [\*Oplegnathus conwayi\*](https://www.inaturalist.org/taxa/618838-Oplegnathus-conwayi)

Only observations that were "research grade" were included. Click [*here*](https://www.inaturalist.org/posts/39072-research-grade) to learn more about how iNaturalist categorizes the quality of its observations.

The species were chosen based on their state of vulnerability, all of the species are listed as red by [*SASSI*](https://wwfsassi.co.za/sassi-list/) and most species were listed the [*IUCN*](https://www.iucnredlist.org) red list as "endangered" or worse.

## 2 Filter, transform and bind the occurrence data

This is the code I used to read, filter, transform and bind the occurrence data:

```{r}

#Call the occurrence data directly from iNat for fish spp
bronzebream <- get_inat_obs(taxon_name = "Pachymetopon grande",
                            bounds = c(-35, 18, -20, 35),
                            maxresults = 1000)

redstump <- get_inat_obs(taxon_name = "Chrysoblephus gibbiceps",
                         bounds = c(-35, 18, -20, 35),
                         maxresults = 1000)
redsteen <- get_inat_obs(taxon_name = "Petrus rupestris",
                         bounds = c(-35, 18, -20, 35),
                         maxresults = 1000)
knifejaw <- get_inat_obs(taxon_name = "Oplegnathus conwayi",
                         bounds = c(-35, 18, -20, 35),
                         maxresults = 1000)
capestump <- get_inat_obs(taxon_name = "Rhabdosargus holubi",
                          bounds = c(-35, 18, -20, 35),
                          maxresults = 1000)
#Filter returned observations by quality grade attributes
bronzebream <- bronzebream %>% filter(positional_accuracy<46 & 
                                        latitude<0 &
                                        !is.na(latitude) &
                                        quality_grade == "research")
redstump<- redstump %>% filter(positional_accuracy<46 & 
                                 latitude<0 &
                                 !is.na(latitude) &
                                 quality_grade == "research")
redsteen <- redsteen %>% filter(positional_accuracy<46 & 
                                  latitude<0 &
                                  !is.na(latitude) &
                                  quality_grade == "research")
knifejaw <- knifejaw %>% filter(positional_accuracy<46 & 
                                  latitude<0 &
                                  !is.na(latitude) &
                                  quality_grade == "research")
capestump <- capestump %>% filter(positional_accuracy<46 & 
                                    latitude<0 &
                                    !is.na(latitude) &
                                    quality_grade == "research")


#Make the data frame a spatial object of class = "sf"
bronzebream <- st_as_sf(bronzebream, coords = c("longitude", "latitude"), crs = 4326)
redstump<- st_as_sf(redstump, coords = c("longitude", "latitude"), crs = 4326)
redsteen<- st_as_sf(redsteen, coords = c("longitude", "latitude"), crs = 4326)
knifejaw<- st_as_sf(knifejaw, coords = c("longitude", "latitude"), crs = 4326)
capestump<- st_as_sf(capestump, coords = c("longitude", "latitude"), crs = 4326)



#Join data frames of fish into one variable using bind rows function
?bind_rows()
fishdat = bind_rows(bronzebream, redstump, redsteen, knifejaw, capestump)

```


### Checking class of the data frames

``` {r}

#return class to check that the data frame is indeed a spatial object
class(capestump)
class(knifejaw)
class(redsteen)
class(redstump)
class(bronzebream)

```



## 3 Importing Marine Protected Area data

The data for the marine protected areas in South Africa were obtained from SANBI, specifically: [*here*](http://bgis.sanbi.org/SpatialDataset/Detail/650).

Here is the code used to read in the MPA data;

```{r}
#Reading in MPA data
MPA<- st_read("/Users/savannahanderson/Desktop/stats directories/WCBSP_MPA_2017-2")

```

## 4 Crop fish data to fit MPA data

Because the MPA data are only for the Western Cape, we need to crop the fish occurrence data to fit these bounds:

```{r `echo: FALSE`}
#Bounding box:  xmin: 17.92102 ymin: -34.62667 xmax: 24.19405 ymax: -33.04178

ext = c(17.92102, -34.62667, 24.19405, -33.04178)
names(ext) = c("xmin", "ymin", "xmax", "ymax")

#crop fishdat variable
fishcrop = st_crop(fishdat, ext)
```

##5 Plotting both MPA and fish occurrence data into an interactive leaflet map

```{r}

#interactive

#Creating colour palette and interactive leaflet
palPwr <- leaflet::colorFactor(palette = c("Bronze Seabream" = "red", 
                                           "Red Stumpnose" = "orange", 
                                           "Red Steenbras" = "green", "Cape knifejaw" = "pink", "Cape Stumpnose" = "purple"), 
                               domain = fishcrop$common_name)

leaflet() %>%
  addTiles(group = "Default") %>%  
  #add fish occurence points
  addCircleMarkers(data = fishcrop, radius = 3, fillOpacity = 5, color = palPwr(fishcrop$common_name)) %>% 
  # Add legend
  addLegend("bottomright",
            pal = palPwr, 
            values = fishcrop$common_name,
            title = "Species",
            opacity = 1) %>% 
## Add MPA polygons  
addPolygons(data = MPA, weight = 5, fill = FALSE, label = MPA$Name)


```

### The plot

I have included the plot as a link to an Rpubs below and embedded it.

[*Link to Rpubs*](http://rpubs.com/savannahscripts/1016059)

![*Figure 1*](/Users/savannahanderson/Desktop/stats directories/GIS_resident_MPA_Wc.png)

### Some notes on the plot

I created my own colour palette and associated figure legend for the five fish species, I chose to create my own palette but there are premade palettes that exist.

I added in labels of each of the MPAs, which can be viewed by hovering over each MPA (in blue)

## 6 Identifying points that fall outside of the MPAs

To determine which areas along the South African coastline could benefit from MPA addition or expansion, we can identify where points fall outside of MPA areas,

We can use this to tell us how many of our points are within 1km of a MPA

```{r, echo=FALSE}

st_is_within_distance(MPA, fishcrop, 1000) %>% unlist() %>% unique()
```

I have chosen a distance of 1km as a buffer zone because the species we are assessing in this project are resident species , and thus do not move from their locations/ reefs. For migrating or nomadic species, this would be more complicated, as these fish are capable of crossing large distances and potentially moving into several different MPAs. It is for this reason that MPA establishment is most useful for the conservation of resident fish species or sessile marine species.



